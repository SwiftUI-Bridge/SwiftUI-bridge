name: Compile docs
description: 'A reusable fragment that compiles Swift documentation for a target'
inputs:
  target:
    description: 'Target to compile documentation for'
    required: true
  upload:
    # Assumed false if omitted. We could supply the 'default' field, but it doesn't take
    # effect when this composite action is called from a workflow, so it would just be
    # misleading.
    description: 'Whether to upload the documentation as an artifact or not'
  xcodebuild:
    # Assumed false if omitted
    description: 'Whether to use xcodebuild instead of SwiftPM or not'
  xcodebuild-device-type:
    # Assumed 'Mac' if omitted
    description: 'The device type to compile docs for when using xcodebuild (e.g. iPhone, iPad or TV)'
runs:
  using: "composite"
  steps:
    - name: Compile documentation (with SwiftPM)
      if: ${{ inputs.xcodebuild != 'true' }} # Compare to constant to treat empty input as false
      run: |
        set -ex
        mkdir "$TARGET.doccarchive" && \
        swift package \
          --allow-writing-to-directory . \
          generate-documentation \
          --target "$TARGET" \
          --disable-indexing \
          --transform-for-static-hosting \
          --hosting-base-path swift-cross-ui \
          --output-path "$TARGET.doccarchive" \
          --source-service github \
          --source-service-base-url https://github.com/stackotter/swift-cross-ui/blob/main \
          --checkout-path $(pwd) \
          --verbose
      shell: bash
      env:
        TARGET: ${{ inputs.target }}
    - name: Compile documentation (with xcodebuild)
      if: ${{ inputs.xcodebuild == 'true' }} # Compare to constant to treat empty input as false
      run: |
        set -ex
        destination=""
        if [[ $DEVICE_TYPE == "Mac" ]] || [[ $DEVICE_TYPE == "" ]]; then
          destination="platform=OS X"
        else
          destination="id=$(xcrun simctl list devices $devicetype available | grep -v -- -- | tail -n 1 | grep -oE '[0-9A-F\-]{36}')"
        fi
        echo "$DEVICE_TYPE"
        echo "Building documentation for destination '$destination'"
        xcodebuild -skipMacroValidation -scheme "$TARGET" -destination "$destination" -derivedDataPath data docbuild | xcbeautify --renderer github-actions
        cp -R "data/Build/Products/Debug/$TARGET.doccarchive" "$TARGET.doccarchive"
      shell: bash
      env:
        TARGET: ${{ inputs.target }}
        DEVICE_TYPE: ${{ inputs.xcodebuild-device-type }}
    - uses: actions/upload-artifact@v4
      if: ${{ inputs.upload == 'true' }} # Compare to constant to treat empty input as false
      with:
        name: ${{ inputs.target }}.doccarchive
        path: ${{ inputs.target }}.doccarchive
